AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Resources:
  MyLambdaFunctionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - s3:PutObject
                  - s3:GetObject
                  - s3:DeleteObject
                Resource: "*"

  MyApi:
    Type: 'AWS::Serverless::Api'
    Properties:
      Name: MyApi
      StageName: dev

  MyLambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: server.handler
      Runtime: nodejs20.x
      CodeUri: ../backend
      Environment:
        Variables:
          GOOGLE_BOOKS_API_URL: 'https://www.googleapis.com/books/v1/volumes'
          PORT: '5000'
          AWS_S3_BUCKET: 'bibliotech2'
      Role: !GetAtt MyLambdaFunctionRole.Arn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref MyApi
      Timeout: 30
      MemorySize: 512

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for MyApi"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/dev/"
